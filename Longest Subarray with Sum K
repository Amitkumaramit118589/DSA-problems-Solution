class Solution {
  public:
    int longestSubarray(vector<int>& arr, int k) {
        // code here
       int n = arr.size();
    int sum = 0, length = 0;
    map<int, int> mp;

    for (int i = 0; i < n; i++) {
        sum += arr[i];

        if (sum == k) {
            length = max(length, i + 1);
        }
        // Store the prefix sum if it hasn't been stored already
        if (mp.find(sum) == mp.end()) {
            mp[sum] = i;
        }
        // Check if there exists a subarray with sum equal to k
        if (mp.find(sum - k) != mp.end()) {
            length = max(length, i - mp[sum - k]);
        }
    }

    return length;
    }
};
