class Solution {
  public:
    int maxWater(vector<int> &arr) {
    int n = arr.size();
    if (n <= 2) return 0; // No water can be trapped with less than 3 bars

    // Arrays to store the left and right maximum heights
    vector<int> leftMax(n), rightMax(n);

    // Fill leftMax array
    leftMax[0] = arr[0];
    for (int i = 1; i < n; i++) {
        leftMax[i] = max(leftMax[i - 1], arr[i]);
    }

    // Fill rightMax array
    rightMax[n - 1] = arr[n - 1];
    for (int i = n - 2; i >= 0; i--) {
        rightMax[i] = max(rightMax[i + 1], arr[i]);
    }

    // Calculate the total water trapped
    int water = 0;
    for (int i = 0; i < n; i++) {
        water += max(0, min(leftMax[i], rightMax[i]) - arr[i]);
    }

    return water;
}

};
